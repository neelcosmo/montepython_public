#------Experiments to test (separated with commas)-----

data.experiments=['Planck_highl_TT_lite', 'Planck_lowl_EE', 'Planck_lowl_TT', 'Planck_lensing']

#------ Settings for the over-sampling.
data.over_sampling=[1, 4]
#data.over_sampling=[1,2,2,2,2]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]

# Dataset specific parameters:
# Here we need to set e.g. the effective reshift of the survey. This is due to the fact that for running CLASS, you already need to specify the output redshifts for P(k).

data.cosmo_arguments['z_pk'] = '0.02, 0.10, 0.15, 0.17, 0.18, 0.38, 0.25, 0.37, 0.32, 0.59, 0.44, 0.73, 0.60, 0.86, 1.40, 1.50'

#x_k, x_b, x_m, x_t, M*^2_ini (default)

# Cosmological parameters list

data.parameters['omega_b']      = [  2.2377,   None, None,      0.015, 0.01, 'cosmo']
data.parameters['omega_cdm']    = [ 0.12010,   None, None,     0.0013,    1, 'cosmo']
data.parameters['100*theta_s']  = [ 1.04110,   None, None,    0.00030,    1, 'cosmo']
data.parameters['ln10^{10}A_s'] = [  3.0447,   None, None,      0.015,    1, 'cosmo']
data.parameters['n_s']          = [  0.9659,   None, None,     0.0042,    1, 'cosmo']
data.parameters['tau_reio']     = [  0.0543,   0.04, None,      0.008,    1, 'cosmo']

#data.parameters['parameters_smg__1'] = [0.1,    None,  None,  0.0, 1, 'cosmo'] # fixed in cosmo_arguments
#data.parameters['parameters_smg__2'] = [0.0,    None,  None,  0.2, 1, 'cosmo']
#data.parameters['parameters_smg__3'] = [0.0,    None,  None,  0.2, 1, 'cosmo']
#data.parameters['parameters_smg__4'] = [0.0,    None,  None,  0.0, 1, 'cosmo']
#data.parameters['parameters_smg__5'] = [1.0,    None,  None,  0.0, 1, 'cosmo']

# Nuisance parameter list, same call, except the name does not have to be a class name

data.parameters['A_planck']          = [ 1.00061,   0.9,   1.1,     0.0025,     1, 'nuisance']

# Derived parameters

data.parameters['z_reio']          = [1, None, None, 0,     1,   'derived']
data.parameters['H0']              = [0, None, None, 0,     1,   'derived']
data.parameters['A_s']             = [0, None, None, 0,  1e-9,   'derived']

#data.parameters['mu_smg'] = [1, None, None, 0, 1, 'derived']
#data.parameters['Sigma_smg'] = [1, None, None, 0, 1, 'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

data.cosmo_arguments['output'] = 'mPk,tCl,lCl,pCl'
data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
data.cosmo_arguments['k_pivot'] = 0.05

# The base model features two massless and one massive neutrino with m=0.06eV. The settings below ensures that Neff=3.046 and m/omega = 93.14 eV

data.cosmo_arguments['N_ur']   = 2.0328
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['m_ncdm'] = 0.06
data.cosmo_arguments['T_ncdm'] = 0.71611
data.cosmo_arguments['YHe']    = 0.25

# These two are required to get sigma8 as a derived parameter (class must compute the P(k) until sufficient k)

data.cosmo_arguments['k_min_tau0'] = 0.005
data.cosmo_arguments['P_k_max_h/Mpc'] = 250.
data.cosmo_arguments['z_max_pk']=5.1

# Parameter arguments for hi_class run:

data.cosmo_arguments['Omega_Lambda']    =  0.0
data.cosmo_arguments['Omega_smg']       = -1.0
data.cosmo_arguments['expansion_model'] = 'lcdm'
data.cosmo_arguments['expansion_smg']  =  0.7

data.cosmo_arguments['gravity_model']   = 'propto_omega'

#data.cosmo_arguments['parameters_smg__1'] = 1.0
#data.cosmo_arguments['parameters_smg__2'] = 0.0
#data.cosmo_arguments['parameters_smg__3'] = 0.0
#data.cosmo_arguments['parameters_smg__4'] = 0.0
#data.cosmo_arguments['parameters_smg__5'] = 1.0

data.cosmo_arguments['parameters_smg'] = '1, 1, 1, 1, 1'

data.cosmo_arguments['kineticity_safe_smg']         =  0.01
data.cosmo_arguments['skip_stability_tests_smg']    = 'no'
data.cosmo_arguments['pert_initial_conditions_smg'] = 'zero'
data.cosmo_arguments['Omega_fld']                   =  0.0

#------ Mcmc parameters ----

data.N=10
data.write_step=5
